CREATE TYPE role AS ENUM (
    'ROLE_ADMIN',
    'ROLE_USER'
);

create table Person
(
    id bigint generated by default as identity primary key,
    full_name VARCHAR(50) CHECK (full_name ~ '^[A-Za-z]+ [A-Za-z]+ [A-Za-z]+$'),
    age INTEGER CHECK (age > 10),
    email VARCHAR(255) UNIQUE CHECK (email ~* '^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$'),
    phone_number VARCHAR(12) CHECK (phone_number ~ '^\+7\d{10}$'),
    password VARCHAR(255),
    created_at TIMESTAMP,
    removed_at TIMESTAMP,
    created_person VARCHAR(50),
    removed_person VARCHAR(50),
    role role
);

INSERT INTO Person (full_name, age, email, phone_number, password, role, created_at, created_person)
VALUES
    ('John Michael Doe', 25, 'johndoe@example.com', '+71234567890', 'password123', 'ROLE_USER', CURRENT_TIMESTAMP, 'ADMIN'),
    ('Jane Elizabeth Smith', 30, 'janesmith@example.com', '+79876543210', 'password456', 'ROLE_ADMIN', CURRENT_TIMESTAMP, 'ADMIN');

drop table Person;

CREATE TYPE book_status AS ENUM (
    'FREE',
    'ASSIGNED',
    'VIEWING_COVER',
    'VIEWING_CONTENT'
);

create table Book
(
    book_id bigint generated by default as identity primary key,
    title VARCHAR(255) CHECK (length(title) >= 2),
    author VARCHAR(50) CHECK (length(author) >= 2),
    year_of_production INTEGER CHECK (year_of_production >= 1000 AND year_of_production <= 9999),
    annotation TEXT,
    cover_image BYTEA,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    removed_at TIMESTAMP,
    created_person VARCHAR(50),
    updated_person VARCHAR(50),
    removed_person VARCHAR(50),
    person_id INTEGER REFERENCES person(id) on delete set null,
    status book_status
);

INSERT INTO Book (title, author, year_of_production, annotation, created_at, created_person, person_id, status)
VALUES
    ('To Kill a Mockingbird', 'Harper Lee', 1960, 'A classic novel about racial injustice', CURRENT_TIMESTAMP, 'ADMIN', 1, 'FREE'),
    ('1984', 'George Orwell', 1949, 'A dystopian novel about totalitarianism', CURRENT_TIMESTAMP, 'ADMIN', 2, 'FREE');

drop table Book;